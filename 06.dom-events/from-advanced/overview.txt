DOM - Document Object Model is part of the Browser's API

USER INTERFACE: includes all the visual elements 
and interactions that allow users to navigate, input data, 
and receive feedback from the system.

To modify DOM means to modify the interface. 
Using JS, through DOM we can modify the interface.

BOM - Browser Object Model - it gives us access to objects that are part of the Browser.
For example, document, location and history.

DOM === document => It might be said that DOM is part of BOM *

The global object in the Browser is called 'window'; Inside itself it has
objects like document, history, location, screen and navigator. 

In the Browser
window === globalThis === this

InNode.js
global === globalThis * 'this' in that case refers to the current module

DOM is a tree like structure that contains objects. 

A tree is a nested structure of data. Each element has maximum of 1 parent. 
Only the root element does not have a parent.
Each element can have 0, 1 or more children. 

The text inside an element is called a Text Node.

1. The Browser receives HTML from the server as text
2. Reads it line by line and parses it to DOM tree that lives in the memory
3. Uses the DOM tree to visualize the page content
4. We use JS to modify DOM


In the elements tab in the Browser we see the DOM tree

Node LIst and HTML Collection can be indexed and iterated but they are not arrays.

Only Node List can be iterated with forEach()

CRUD 

READ:

getElementByID()
getElementsByClassName()
getElementsByTagName()
querySelector()
querySelectorAll()

UPDATE

textContent
value 
style
classList.add()
classList.remove()
setAttribute()
removeAttribute()

CREATE 

createElement()